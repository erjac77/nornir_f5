---
name: test
on: [push, pull_request]

jobs:
  test:
    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9']
        platform: [ubuntu-20.04]
        poetry-version: [1.1.15]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1.3.3
        with:
          version: ${{ matrix.poetry-version }}
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache Poetry virtualenv
        uses: actions/cache@v2
        id: cache-poetry
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install
        if: steps.cache-poetry.outputs.cache-hit != 'true'

      - name: Check code quality
        run: poetry run flake8 nornir_f5 tests

      - name: Run pytest under coverage
        run: poetry run coverage run -m pytest

      - name: Generate code coverage report
        run: poetry run coverage xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
